{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user account in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "lastLogin": {
          "type": "string",
          "description": "Timestamp indicating the last time the user logged in.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "createdAt"
      ]
    },
    "GeminiApiKey": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GeminiApiKey",
      "type": "object",
      "description": "Stores the Gemini API key associated with a user account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Gemini API Key entry."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N GeminiApiKey)"
        },
        "key": {
          "type": "string",
          "description": "The Gemini API key (encrypted)."
        },
        "name": {
          "type": "string",
          "description": "A user-friendly name for the API key."
        },
        "usage": {
          "type": "number",
          "description": "The number of times the key has been used."
        },
        "lastUsed": {
          "type": "string",
          "description": "The last date the key was used."
        }
      },
      "required": [
        "id",
        "userId",
        "key",
        "name"
      ]
    },
    "WordPressConnection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WordPressConnection",
      "type": "object",
      "description": "Stores WordPress connection details for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the WordPress Connection entry."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N WordPressConnection)"
        },
        "url": {
          "type": "string",
          "description": "The URL of the WordPress site."
        },
        "username": {
          "type": "string",
          "description": "Username for the WordPress site."
        },
        "appPassword": {
          "type": "string",
          "description": "Application password for the WordPress site (encrypted)."
        }
      },
      "required": [
        "id",
        "userId",
        "url",
        "username",
        "appPassword"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Only the user can read/write their own profile. The 'userId' parameter corresponds to the Firebase Auth UID."
        }
      },
      {
        "path": "/users/{userId}/geminiApiKeys/{geminiApiKeyId}",
        "definition": {
          "entityName": "GeminiApiKey",
          "schema": {
            "$ref": "#/backend/entities/GeminiApiKey"
          },
          "description": "Stores Gemini API keys associated with a user. Only the user can manage their own keys."
        }
      },
      {
        "path": "/users/{userId}/wordpressConnections/{wordPressConnectionId}",
        "definition": {
          "entityName": "WordPressConnection",
          "schema": {
            "$ref": "#/backend/entities/WordPressConnection"
          },
          "description": "Stores WordPress connection details for a user. Only the user can manage their own connections."
        }
      }
    ]
  }
}
